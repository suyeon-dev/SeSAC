<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- 동적폼 로그인 실습문제 MVC 패턴으로 변경해보기 -->
    <title>MVC 실습</title>
    <!-- Axios CDN -->
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <style>
      label {
        display: flex;
      }

      label span {
        width: 90px;
      }

      .success {
        color: blue;
        font-size: 1.2rem;
      }

      .error {
        color: red;
        font-size: 1.2rem;
      }
    </style>
  </head>
  <body>
    <form name="login">
      <h1>MVC패턴 동적폼 로그인</h1>
      <label>
        <span>아이디</span>
        <!-- form 태그로 보내는 게 아니라 name 필수 아니지만 쉽게 선택하려고 하는거임!!!-->
        <input type="text" name="userId" required />
      </label>
      <br />
      <label>
        <span>비밀번호</span>
        <input type="password" name="userPw" required />
      </label>
      <br />
      <button type="button" onclick="clickLogin()">로그인1</button>
      <button type="button" onclick="clickLogin2()">로그인2</button>
    </form>
    <div class="result"></div>

    <script defer>
      const result = document.querySelector('.result');
      function clickLogin() {
        const form = document.forms['login'];

        // form.userId : 태그
        const data = {
          userId: form.userId.value,
          userPw: form.userPw.value,
        };

        // console.log(data);
        if (!form.userId.checkValidity() || !form.userPw.checkValidity()) {
          result.textContent = '아이디와 비밀번호는 필수 값입니다!';
          return;
        }

        // 서버에 보내기
        axios({
          method: 'post',
          url: '/login',
          data,
        })
          .then((response) => {
            console.log(response);
            console.log(response.data);
            if (response.data.isSuccess) {
              result.textContent = '로그인 성공!';
              result.classList.add('success');
              result.classList.remove('error');
            } else {
              result.textContent = '로그인 실패!';
              result.classList.add('error');
              result.classList.remove('success');
            }
          })
          .catch((err) => {
            console.error('err!', err);
          });
      }

      async function clickLogin2() {
        try {
          const form = document.forms['login'];

          const data = {
            userId: form.userId.value,
            userPw: form.userPw.value,
          };

          const response = await axios({
            method: 'post',
            url: '/login2',
            data,
          });
          console.log(response);
          console.log(response.data);
          if (response.data.isSuccess) {
            // ${} 서버에서 보내주는 정보
            result.textContent = `${response.data.userName}님 환영합니다! 로그인 성공!`;
            result.classList.add('success');
            result.classList.remove('error');
          } else {
            result.textContent = '로그인 실패!';
            result.classList.remove('success');
            result.classList.add('error');
          }
        } catch (err) {
          console.error('err', err);
        }
      }
    </script>
  </body>
</html>
